1. Как обозначается символ аннтотации?
a) @
b) $
c) *
d) %
2. В какой версии Java появились аннтотации?
a) java 5
b) java 7
c) java 3
d) java 12
3. Выберите аннтотацию по описанию: указывает, что метод предназначен для переопределения элемента, объявленного в суперклассе. Если ему не удастся правильно переопределить метод, компилятор выдаст сообщение об ошибке.
a) @FunctionalInterface 
b) @Deprecated
c) @SuppressWarnings
d) @Override
4.  Выберите аннтотацию по описанию: введенный в Java 8, указывает, что объявление типа является функциональным интерфейсом, реализация которого может быть предоставлена с использованием лямбда-выражения.
a) @Deprecated
b) @SuppressWarnings
c) @FunctionalInterface
d) @Override
5. Выберите аннтотацию по описанию: указывает, что элемент устарел и не должен использоваться. Компилятор выдаст предупреждение, если программа использует метод, класс или поле, помеченное этой аннотацией.
a) @Deprecated
b) @Override
c) @SuppressWarnings
d) @FunctionalInterface 
6. Можем ли мы расширить аннтотации?
a) Да, с помощью super
b) Да, с помощью extends
c) Да, с помощью implements
d) Нет. Аннотации всегда расширяют java.lang.annotation
7. На что похоже по объявлению аннтотации?
a) на класс
b) на интерфейс
c) на метод	
d) на объект
8. Что может быть в теле аннтотации?
a) обязательные и необязательные элементы
b) константы
c) все вышеперечисленное
d) ничего из этого
9. Как выглядит создание простейшей аннтотации?
a) public @interface Cool { //body }
b) publc class @interface Cool{ //body }
c) private @interface class Cool { //body }
d) public @annotation Cool{ //body }
10. Как описывать переменные в теле аннтотации?
a) int level; 
b) Integer level(); 
c) @Schedule[] name; 
d) @Schedule[] name();
11. Выберите аннтотацию по описанию: Определяет права доступа аннотации (к каким элементам ее можно применять).
a) @Target
b) @Documented
c) @Repeatable
d) @Schedule
12. Выберите аннтотацию по описанию: Аннотация будет наследоваться дочерним классом (по умолчанию аннотации не наследуются). Применима только к описаниям классов.
a) @Schedule
b) @SuppressWarnings
c) @Inherited
d) @interface 
13. Выберите аннтотацию по описанию: Указывает, что аннотация повторяющаяся.
a) @Repeatable
b) @SuppressWarnings
c) @Documented
d) @interface
14. Для элементов аннотаций можно использовать модификаторы, как и в интерфейсах. Какие?
a) public, private
b) private, protected
c) public, abstact
d) abstarct, protected
15. Выберите обязательный элемент в теле аннтотации:
a) public static final MAX_LEVEL = 10;	
b) public int level() default 1;
c) String king();
d) public Integer level() default 1;
16. Выберите аннтотацию по описанию для теста: Указывает игнорировать тест или группу тестов, чтобы избежать потенциального сбоя при выполнении.
a) @Repeatable 
b) @Ignore
c) @SuppressWarnings
d) @Schedule
17. Выберите аннтотацию по описанию: простая аннотация, документирующая автора метода или файла. Обычно соединяется с некоторой дополнительной информацией.
a) @author
b) @throws
c) @see
d) @since
18. Где в коде можно применить аннотации?
a) new @Interned MyObject() // Создание экземпляра класса
b) myString = (@NonNull String) str // Приведение к типу
c) implements @Readonly List<@Readonly T> { ... } // Имплементация
d) Все вышеперечисленное.
19. Выберите аннтотацию по описанию: Она указывает, что аннотированное поле является константой, на которую можно ссылаться с нативного кода. 
a) @Native
b) @Target(ElementType.FIELD)
c) @Retention(RetentionPolicy.SOURCE)
d) @Constant
20. Выберите верные утверждения: 
a) Аннотация - элемент языка, позволяющий в определенном формате добавить мета-информацию в код.
b) Виртуальная машина и язык Java предоставляют широкие возможности по работе с аннтотациями.
c) Аннотации могут быть обработаны как на этапе компиляции, так и на во время исполнения.
d) Все вышеперечисленное. 